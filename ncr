const int mod=998244353;
int N=4e5;
vector<ll> fact(N + 1);
vector<ll> invfact(N + 1);
ll power(ll a, ll n)
{
   if (n == 0)
      return 1;
   ll k = power(a, n / 2);
   if (n % 2 == 0)
      return (k * k) % mod;
   else
      return (((k * k) % mod) * a) % mod;
}

void calc()
{
   fact[0] = 1;
   invfact[0] = 1;
   for (ll i = 1; i <= N; i++)
   {
      fact[i] = (fact[i - 1] * i) % mod;
   }
   invfact[N] = power(fact[N],mod-2);
   for (int i = N - 1; i >= 0; i--)
      invfact[i] = (invfact[i + 1] * (i + 1)) % mod;
}
ll ncr(ll n, ll r)
{
   if (r > n)
      return 0;
   ll ans = ((fact[n] * invfact[r]) % mod * invfact[n - r]) % mod;
   return ans;
}
